extend type Query{
    findAllPasswordReset: [PasswordReset]
    findAllPasswordResetPagination(offset: Int,
                        limit: Int): [PasswordReset]
    findPasswordResetById(id: ID): PasswordReset
}
extend type  Mutation{
    createPasswordReset(passwordResetInput: PasswordResetInput): PasswordReset
    deletePasswordResetById(id: ID):Boolean
    updatePasswordReset(id: ID
        passwordResetInput: PasswordResetInput): PasswordReset

    resetPasswordGetHashCode(phone:String) : ResponsePasswordReset
    generateTokenResetPassword(hashCode: String
        time: String
        id: Int):String
    resetNewPassword(token: String
        password: String):String
}

type PasswordReset{
    id:ID
    createdAt: String
    phone: String
    token: String
    resetCode: Int
    time: String
}

input PasswordResetInput{
    phone: String
    token: String
    resetCode: Int
}
