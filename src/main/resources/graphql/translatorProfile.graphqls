extend type Query{
    findAllTranslatorProfile: [TranslatorProfile]
    findAllTranslatorProfilePagination(offset: Int,
        limit: Int): [TranslatorProfile]
    findTranslatorProfileById(id: ID): TranslatorProfile
}
extend type  Mutation{
    createTranslatorProfile(translatorProfileInput:TranslatorProfileInput):TranslatorProfile
    deleteTranslatorProfileById(id: ID):Boolean
    updateTranslatorProfile(id:ID
        translatorProfileInput:TranslatorProfileInput): TranslatorProfile
}

type TranslatorProfile{
    id:ID
    createdAt: String
    updatedAt: String
    dateOfBirth: String
    email: String
    levelOfKorean: String
    isAvailable: Boolean
    isOnline: Boolean
    isActive: Boolean
    languageList:[Language]
    themeList: [Theme]
    file: File
}

input TranslatorProfileInput{
    dateOfBirth: String
    email: String
    levelOfKorean: String
    isAvailable: Boolean
    isOnline: Boolean
    isActive: Boolean
    languageList:[String]
    themeList: [String]
    file: Int
}